# pressure_lwr = [0.2034536100999398, 0.11362944507811015, 0.07450935869432593, 0.07503614940662694, 0.2184851692180042, 0.18001041955990674, 0.3348812436216018, 0.14884999905940632, 0.14331089036680136, 0.18834401582925406, 0.18877849593454263, 0.22249811797680816, 0.35930661148585824, 0.18039880265894317, 0.16167132117235947, 0.14112951650571223, 0.12256975990722489, 0.30364272411548887, 0.7593757702745448, 0.4295319919930866, 0.1589022305015035, 0.2475821682214578, 0.3505320025251471, 0.9324652818550568, 0.3838887251223088, 0.24506209578080143, 0.11884862758594293]
# temperature_lwr = [0.7044588964975196, 0.3874766810564861, 0.5257083082899778, 0.5933447775655919, 1.162596268837714, 0.42077685795889747, 0.24422479989535473, 0.4814073477071339, 0.8833478679136996, 0.7343699438406065, 0.46737311421797567, 0.4169055569175292, 0.5711167070954875, 0.4691657851735772, 0.4043055953689591, 0.9730327403875884, 0.7488865246673173, 0.6416866744939205, 0.6493092775527337, 0.4687580176805064, 0.31803250887979534, 0.3696514852864335, 0.41050409983602826, 0.6159641695501682, 0.5755021252391342, 1.198999124007871, 1.7332093678187748]
# pressure_lr = [0.21600223897400422, 0.14366792097301898, 0.06676671352216264, 0.06304031461478853, 0.2137978286559806, 0.18625792234137273, 0.3472628810108914, 0.13712182454556374, 0.17500280101226057, 0.17237720445139934, 0.23023874233907127, 0.22496413640341958, 0.39036559188571235, 0.1692855849735336, 0.21603096110409917, 0.15383400302109002, 0.12979904199991749, 0.4294904649294869, 0.5433703714567671, 0.5077983141018377, 0.1564662348748485, 0.22187662214434983, 0.348241145067175, 1.1945084419678225, 0.3972821102157177, 0.2415735823003191, 0.11343227099658039]
# temperature_lr = [0.6528259985629317, 0.9133849172002989, 0.45975321502818, 0.7254073565305633, 1.0776930025493365, 0.6101069551150076, 0.3785781233775029, 0.7174906303241613, 0.6180021099187655, 0.5676969799767938, 0.6102986936640957, 0.5296396261092069, 0.6369318200674738, 0.501224696258018, 0.7677216689455565, 1.328822038242654, 1.3552507823869613, 0.7563166642514749, 1.9347888007386607, 0.49060199489044887, 0.506902248175889, 0.8650818573265558, 0.4633057061048899, 1.6396288478050514, 0.7188324922237617, 1.1194104868063377, 1.9081776610411862]
# pressure_lwr = [0.2587664646129913, 0.2730468745335686, 0.27792127626534874, 0.28056696614426896, 0.26402710185271244, 0.2569282527635723, 0.2546449234242939, 0.2704173769554689, 0.31408320276696905]
# temperature_lwr = [0.6359301712495103, 0.545584154122762, 0.5483400219854663, 0.5952481525447298, 0.500561470685818, 0.45220399389974336, 0.39172589615400405, 0.4249444938125013, 0.5480419304585452]
# pressure_lr = [0.27369834332900705, 0.2709413795728573, 0.27085047199533274, 0.2679652841001174, 0.22918103424860603, 0.21728024164731075, 0.21938696768682478, 0.2315606234665584, 0.2556849738229674]
# temperature_lr = [0.8464398286526579, 0.929199407240072, 0.9338152862006311, 0.904289340360586, 0.5081140142144766, 0.41775856182399523, 0.3852393651493559, 0.38686093047987447, 0.46289641695266825]


# import matplotlib.pyplot as plt
# import numpy as np
# sensor_indices = np.arange(1, len(pressure_lwr)+1)
# plt.figure(figsize=(10, 6))
# plt.bar(sensor_indices - 0.2, pressure_lwr, width=0.4, label="LWR Residuals")
# plt.bar(sensor_indices + 0.2, pressure_lr, width=0.4, label="LR Residuals")
# plt.xticks(sensor_indices, labels=np.round(sensor_indices * 0.1, 1))
# plt.title("Average pressure residuals for different training set sizes")
# plt.xlabel("Proportion of training samples (out of 20)")
# plt.ylabel("Average Residual Size")
# plt.legend()
# plt.show()

# # Bar chart for Temperature Residuals
# plt.figure(figsize=(10, 6))
# plt.bar(sensor_indices - 0.2, temperature_lwr, width=0.4, label="LWR Residuals")
# plt.bar(sensor_indices + 0.2, temperature_lr, width=0.4, label="LR Residuals")
# plt.xticks(sensor_indices, labels=np.round(sensor_indices * 0.1, 1))
# plt.title("Average temperature residuals for different training set sizes")
# plt.xlabel("Proportion of training samples (out of 20)")
# plt.ylabel("Average Residual Size")
# plt.legend()
# plt.show()
import pickle
import numpy as np
import matplotlib.pyplot as plt
with open("anomaly_times_temperature.pkl", "rb") as f:
    data = pickle.load(f)
anomaly_times = np.zeros((185))
for sensor_index in data:
    for anomaly in sensor_index:
        anomaly_times[anomaly-1] += 1
print(np.sum(anomaly_times))
plt.plot(anomaly_times)
plt.title("Temperature anomalies detected over 185 days")
plt.ylabel("Number of sensors detecting an anomaly")
plt.xlabel("Batch number (Batch size = 1 day)")
plt.show()